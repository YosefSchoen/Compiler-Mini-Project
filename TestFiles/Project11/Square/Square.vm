function Square.new 0
push constant 0
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
call draw 0
push pointer 0
return
function Square.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Square.draw 0
push argument 0
pop pointer 0
push constant 1
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Square.erase 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Square.incSize 0
push argument 0
pop pointer 0
push this 1
push this 2
add
push constant 254
lt
push this 0
push this 2
add
push constant 510
lt
and
not
if-goto false.144
call erase 0
push this 2
push constant 2
add
pop this 2
call draw 0
goto end.144
label false.144
label end.144
push constant 0
return
function Square.decSize 0
push argument 0
pop pointer 0
push this 2
push constant 2
gt
not
if-goto false.194
call erase 0
push this 2
push constant 2
sub
pop this 2
call draw 0
goto end.194
label false.194
label end.194
push constant 0
return
function Square.moveUp 0
push argument 0
pop pointer 0
push this 1
push constant 1
gt
not
if-goto false.228
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 2
add
push constant 1
sub
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
push this 1
push constant 2
sub
pop this 1
push constant 1
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push constant 1
add
call Screen.drawRectangle 4
pop temp 0
goto end.228
label false.228
label end.228
push constant 0
return
function Square.moveDown 0
push argument 0
pop pointer 0
push this 1
push this 2
add
push constant 254
lt
not
if-goto false.310
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push constant 1
add
call Screen.drawRectangle 4
pop temp 0
push this 1
push constant 2
add
pop this 1
push constant 1
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 2
add
push constant 1
sub
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
goto end.310
label false.310
label end.310
push constant 0
return
function Square.moveLeft 0
push argument 0
pop pointer 0
push this 0
push constant 1
gt
not
if-goto false.396
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 2
add
push constant 1
sub
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push constant 2
sub
pop this 0
push constant 1
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push constant 1
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
goto end.396
label false.396
label end.396
push constant 0
return
function Square.moveRight 0
push argument 0
pop pointer 0
push this 0
push this 2
add
push constant 510
lt
not
if-goto false.478
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push constant 1
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push constant 2
add
pop this 0
push constant 1
not
call Screen.setColor 1
pop temp 0
push this 0
push this 2
add
push constant 1
sub
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
goto end.478
label false.478
label end.478
push constant 0
return


//class symbol table
//name: x
//type: int
//kind: field
//number: 0
//name: y
//type: int
//kind: field
//number: 1
//name: size
//type: int
//kind: field
//number: 2


//method's symbol table
//name: Ax
//type: int
//kind: argument
//number: 0
//name: Ay
//type: int
//kind: argument
//number: 1
//name: Asize
//type: int
//kind: argument
//number: 2
//name: x
//type: int
//kind: this
//number: 0
//name: y
//type: int
//kind: this
//number: 1
//name: size
//type: int
//kind: this
//number: 2


//method's symbol table
//name: this
//type: Square
//kind: argument
//number: 0
//name: x
//type: int
//kind: this
//number: 0
//name: y
//type: int
//kind: this
//number: 1
//name: size
//type: int
//kind: this
//number: 2


//method's symbol table
//name: this
//type: Square
//kind: argument
//number: 0
//name: x
//type: int
//kind: this
//number: 0
//name: y
//type: int
//kind: this
//number: 1
//name: size
//type: int
//kind: this
//number: 2


//method's symbol table
//name: this
//type: Square
//kind: argument
//number: 0
//name: x
//type: int
//kind: this
//number: 0
//name: y
//type: int
//kind: this
//number: 1
//name: size
//type: int
//kind: this
//number: 2


//method's symbol table
//name: this
//type: Square
//kind: argument
//number: 0
//name: x
//type: int
//kind: this
//number: 0
//name: y
//type: int
//kind: this
//number: 1
//name: size
//type: int
//kind: this
//number: 2


//method's symbol table
//name: this
//type: Square
//kind: argument
//number: 0
//name: x
//type: int
//kind: this
//number: 0
//name: y
//type: int
//kind: this
//number: 1
//name: size
//type: int
//kind: this
//number: 2


//method's symbol table
//name: this
//type: Square
//kind: argument
//number: 0
//name: x
//type: int
//kind: this
//number: 0
//name: y
//type: int
//kind: this
//number: 1
//name: size
//type: int
//kind: this
//number: 2


//method's symbol table
//name: this
//type: Square
//kind: argument
//number: 0
//name: x
//type: int
//kind: this
//number: 0
//name: y
//type: int
//kind: this
//number: 1
//name: size
//type: int
//kind: this
//number: 2


//method's symbol table
//name: this
//type: Square
//kind: argument
//number: 0
//name: x
//type: int
//kind: this
//number: 0
//name: y
//type: int
//kind: this
//number: 1
//name: size
//type: int
//kind: this
//number: 2


//method's symbol table
//name: this
//type: Square
//kind: argument
//number: 0
//name: x
//type: int
//kind: this
//number: 0
//name: y
//type: int
//kind: this
//number: 1
//name: size
//type: int
//kind: this
//number: 2


