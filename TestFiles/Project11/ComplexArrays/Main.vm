function Main.main 3
push constant 10
call Array.new 1
pop temp 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
call Array.new 1
pop temp 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
call Array.new 1
pop temp 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 3
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 4
add
push constant 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 5
add
push constant 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push local 0
push constant 3
add
pop pointer 1
push that 0
add
push local 0
push constant 3
add
pop pointer 1
push that 0
push constant 3
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push local 1
push local 0
push constant 3
add
pop pointer 1
push that 0
add
pop pointer 1
push that 0
add
push local 0
push local 0
push constant 5
add
pop pointer 1
push that 0
add
pop pointer 1
push that 0
push local 1
push constant 7
push local 0
push constant 3
add
pop pointer 1
push that 0
sub
push constant 2
call Main.double 1
pop temp 0
sub
push constant 1
add
add
pop pointer 1
push that 0
call Math.multiply 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant Test 1: expected result: 5 ; actual result:  
call Output.printString 1
pop temp 0
push local 1
push constant 2
add
pop pointer 1
push that 0
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push constant Test 2: expected result: 40 ; actual result:  
call Output.printString 1
pop temp 0
push local 0
push constant 5
add
pop pointer 1
push that 0
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push constant Test 3: expected result: 0 ; actual result:  
call Output.printString 1
pop temp 0
push local 2
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 0
eq
not
if-goto false.226
push local 0
push constant 10
call Main.fill 2
pop temp 0
push local 0
push constant 3
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 1
add
push constant 33
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 7
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 1
add
push constant 77
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 3
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
push local 1
push constant 1
add
pop pointer 1
push that 0
push local 2
push constant 1
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto end.226
label false.226
label end.226
push constant Test 4: expected result: 77 ; actual result:  
call Output.printString 1
pop temp 0
push local 2
push constant 1
add
pop pointer 1
push that 0
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push constant Test 5: expected result: 110 ; actual result:  
call Output.printString 1
pop temp 0
push local 1
push constant 1
add
pop pointer 1
push that 0
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push constant 0
return
function Main.double 0
push argument 0
push constant 2
call Math.multiply 2
return
function Main.fill 0


//class symbol table


//method's symbol table
//name: c
//type: Array
//kind: var
//number: 2


//method's symbol table
//name: a
//type: int
//kind: argument
//number: 0


//method's symbol table


