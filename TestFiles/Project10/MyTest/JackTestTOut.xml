<tokens>
	<keyword> class </keyword>
	<identifier> foo </identifier>
	<symbol> { </symbol>
	<keyword> static </keyword>
	<keyword> int </keyword>
	<identifier> b </identifier>
	<symbol> ; </symbol>
	<keyword> field </keyword>
	<keyword> int </keyword>
	<identifier> x </identifier>
	<symbol> , </symbol>
	<identifier> y </identifier>
	<symbol> ; </symbol>
	<keyword> static </keyword>
	<keyword> int </keyword>
	<identifier> z </identifier>
	<symbol> ; </symbol>
	<keyword> field </keyword>
	<keyword> char </keyword>
	<identifier> a </identifier>
	<symbol> ; </symbol>
	<keyword> method </keyword>
	<keyword> int </keyword>
	<identifier> bank </identifier>
	<symbol> ( </symbol>
	<keyword> int </keyword>
	<identifier> x2 </identifier>
	<symbol> , </symbol>
	<keyword> int </keyword>
	<identifier> y2 </identifier>
	<symbol> , </symbol>
	<keyword> int </keyword>
	<identifier> z2 </identifier>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<keyword> var </keyword>
	<keyword> int </keyword>
	<identifier> xyz </identifier>
	<symbol> , </symbol>
	<identifier> xyz2 </identifier>
	<symbol> ; </symbol>
	<keyword> var </keyword>
	<keyword> char </keyword>
	<identifier> abc </identifier>
	<symbol> ; </symbol>
	<keyword> let </keyword>
	<identifier> xyz </identifier>
	<symbol> = </symbol>
	<identifier> x2 </identifier>
	<symbol> + </symbol>
	<symbol> ( </symbol>
	<identifier> y2 </identifier>
	<symbol> * </symbol>
	<identifier> z2 </identifier>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
	<symbol> } </symbol>
	<symbol> } </symbol>
</tokens>