<tokens>
	<keyword> class </keyword>
	<identifier> String </identifier>
	<symbol> { </symbol>
	<keyword> constructor </keyword>
	<identifier> String </identifier>
	<identifier> new </identifier>
	<symbol> ( </symbol>
	<keyword> int </keyword>
	<identifier> maxLength </identifier>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<symbol> } </symbol>
	<keyword> method </keyword>
	<keyword> void </keyword>
	<identifier> dispose </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<symbol> } </symbol>
	<keyword> method </keyword>
	<keyword> int </keyword>
	<identifier> length </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<symbol> } </symbol>
	<keyword> method </keyword>
	<keyword> char </keyword>
	<identifier> charAt </identifier>
	<symbol> ( </symbol>
	<keyword> int </keyword>
	<identifier> j </identifier>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<symbol> } </symbol>
	<keyword> method </keyword>
	<keyword> void </keyword>
	<identifier> setCharAt </identifier>
	<symbol> ( </symbol>
	<keyword> int </keyword>
	<identifier> j </identifier>
	<symbol> , </symbol>
	<keyword> char </keyword>
	<identifier> c </identifier>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<symbol> } </symbol>
	<keyword> method </keyword>
	<identifier> String </identifier>
	<identifier> appendChar </identifier>
	<symbol> ( </symbol>
	<keyword> char </keyword>
	<identifier> c </identifier>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<symbol> } </symbol>
	<keyword> method </keyword>
	<keyword> void </keyword>
	<identifier> eraseLastChar </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<symbol> } </symbol>
	<keyword> method </keyword>
	<keyword> int </keyword>
	<identifier> intValue </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<symbol> } </symbol>
	<keyword> method </keyword>
	<keyword> void </keyword>
	<identifier> setInt </identifier>
	<symbol> ( </symbol>
	<keyword> int </keyword>
	<identifier> val </identifier>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<symbol> } </symbol>
	<keyword> function </keyword>
	<keyword> char </keyword>
	<identifier> newLine </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<symbol> } </symbol>
	<keyword> function </keyword>
	<keyword> char </keyword>
	<identifier> backSpace </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<symbol> } </symbol>
	<keyword> function </keyword>
	<keyword> char </keyword>
	<identifier> doubleQuote </identifier>
	<symbol> ( </symbol>
	<symbol> ) </symbol>
	<symbol> { </symbol>
	<symbol> } </symbol>
	<symbol> } </symbol>
</tokens>